version: '3.7'

networks:
  default:
  monitoring:
    name: monitoring
volumes:
  prometheus_data: { }
  grafana_data: { }

services:
  prometheus:
    image: prom/prometheus:latest
    labels:
      - monitoring-demo.container.importance=high
    volumes:
      - ./prometheus/:/etc/prometheus/
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
      - '--web.enable-lifecycle'
      - '--storage.tsdb.retention.time=90d'

    expose:
      - 9090
    links:
      - cadvisor:cadvisor
    depends_on:
      - cadvisor
    networks:
      default:
      monitoring:
    restart: unless-stopped

  cadvisor:
    image: gcr.io/cadvisor/cadvisor:latest
    labels:
      - monitoring-demo.container.importance=high
    volumes:
      - '/:/rootfs:ro'
      - '/var/run:/var/run:ro'
      - '/sys:/sys:ro'
      - '/var/lib/docker/:/var/lib/docker:ro'
      - '/dev/disk/:/dev/disk:ro'
    command:
      - '-docker_only=true'
      - '--global_housekeeping_interval=1m0s'
      - '--housekeeping_interval=15s'
      - '-disable_metrics=udp,advtcp,sched,hugetlb,referenced_memory,tcp,process,cpu_topology,resctrl,memory_numa,accelerator,diskIO'
    devices:
      - /dev/kmsg
    expose:
      - 8080
    networks:
      default:
    restart: unless-stopped

  node-exporter:
    image: prom/node-exporter
    labels:
      - monitoring-demo.container.importance=high
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.sysfs=/host/sys'
      - '--path.rootfs=/rootfs'
      - --collector.filesystem.ignored-mount-points
      - "^/(sys|proc|dev|host|etc|rootfs/var/lib/docker/containers|rootfs/var/lib/docker/overlay2|rootfs/run/docker/netns|rootfs/var/lib/docker/aufs)($$|/)"
    expose:
      - 9100
    restart: unless-stopped
    networks:
      default:

  grafana:
    image: grafana/grafana:9.0.3
    labels:
      - monitoring-demo.container.importance=high
    user: "472"
    depends_on:
      - prometheus
    volumes:
      - grafana_data:/var/lib/grafana
      - ./grafana/provisioning/:/etc/grafana/provisioning/
      - ./grafana/conf/custom.ini:/etc/grafana/conf/grafana.ini:ro
    #    env_file:
    #      - ./grafana/config.monitoring
    environment:
      # Optionally enable auto-login (bypasses Grafana login screen)
      GF_AUTH_OAUTH_AUTO_LOGIN: "true"
    networks:
      default:
    restart: unless-stopped
    ports:
      - 3000:3000

  renderer:
    image: grafana/grafana-image-renderer:3.5.0
    labels:
      - monitoring-demo.container.importance=high
    networks:
      default:
    restart: unless-stopped

  blackbox:
    image: prom/blackbox-exporter:latest
    labels:
      - monitoring-demo.container.importance=high
    volumes:
      - ./blackbox-config.yml:/etc/blackbox_exporter/config.yml
    networks:
      default:
    restart: unless-stopped